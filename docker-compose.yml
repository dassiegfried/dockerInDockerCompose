version: '3.5'
services:
  mediathekview:
    build:
        context: .
        dockerfile: mediathek.Dockerfile
    container_name: mediathekview
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 8G
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "5800:5800"
    volumes:
      - "/mnt/nvme/dockerInDocker/mediathek:/config:rw"
      - "/mnt/hdds/media/mediathek:/output:rw"
    environment:
       - "USER_ID=568"
       - "GROUP_ID=568"
  mirror:
      build: 
          context: .
          dockerfile: apt-mirror.Dockerfile
      command: bash -c "apt-mirror && bash /apt-mirror/postmirror.sh"
      deploy:
        resources:
          limits:
            cpus: '4'
            memory: 1G
      volumes:
          - "/mnt/hdds/didHdd/mirror/mirror:/var/spool/apt-mirror"  
  server:
      build:
          context: .
          dockerfile: nginx.Dockerfile
      restart: always
      deploy:
        resources:
          limits:
            cpus: '4'
            memory: 1G
      command: [nginx-debug, '-g', 'daemon off;']
      volumes:
          - "/mnt/hdds/didHdd/mirror/mirror/mirror:/mirror:ro"
      ports:
          - "8080:80"
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500m

  dns-server:
    container_name: dns-server
    hostname: dns-server
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 2G
    image: technitium/dns-server:latest
    # For DHCP deployments, use "host" network mode and remove all the port mappings, including the ports array by commenting them
    network_mode: "host"
    #ports:
      #- "5380:5380/tcp" #DNS web console (HTTP)
      # - "53443:53443/tcp" #DNS web console (HTTPS)
      #- "53:53/udp" #DNS service
      #- "53:53/tcp" #DNS service
      # - "853:853/udp" #DNS-over-QUIC service
      # - "853:853/tcp" #DNS-over-TLS service
      # - "443:443/udp" #DNS-over-HTTPS service (HTTP/3)
      # - "443:443/tcp" #DNS-over-HTTPS service (HTTP/1.1, HTTP/2)
      # - "80:80/tcp" #DNS-over-HTTP service (use with reverse proxy or certbot certificate renewal)
      # - "8053:8053/tcp" #DNS-over-HTTP service (use with reverse proxy)
      #- "67:67/udp" #DHCP service      
    environment:
      - DNS_SERVER_DOMAIN=did-tns #The primary domain name used by this DNS Server to identify itself.
      # - DNS_SERVER_ADMIN_PASSWORD= #DNS web console admin user password.
      # - DNS_SERVER_ADMIN_PASSWORD_FILE=password.txt #The path to a file that contains a plain text password for the DNS web console admin user.
      # - DNS_SERVER_PREFER_IPV6=false #DNS Server will use IPv6 for querying whenever possible with this option enabled.
      # - DNS_SERVER_WEB_SERVICE_LOCAL_ADDRESSES=172.17.0.1,127.0.0.1 #Comma separated list of network interface IP addresses that you want the web service to listen on for requests. The "172.17.0.1" address is the built-in Docker bridge. The "[::]" is the default value if not specified. Note! This must be used only with "host" network mode.
      # - DNS_SERVER_WEB_SERVICE_HTTP_PORT=5380 #The TCP port number for the DNS web console over HTTP protocol.
      # - DNS_SERVER_WEB_SERVICE_HTTPS_PORT=53443 #The TCP port number for the DNS web console over HTTPS protocol.
      # - DNS_SERVER_WEB_SERVICE_ENABLE_HTTPS=false #Enables HTTPS for the DNS web console.
      # - DNS_SERVER_WEB_SERVICE_USE_SELF_SIGNED_CERT=false #Enables self signed TLS certificate for the DNS web console.
      # - DNS_SERVER_OPTIONAL_PROTOCOL_DNS_OVER_HTTP=false #Enables DNS server optional protocol DNS-over-HTTP on TCP port 8053 to be used with a TLS terminating reverse proxy like nginx.
      # - DNS_SERVER_RECURSION=AllowOnlyForPrivateNetworks #Recursion options: Allow, Deny, AllowOnlyForPrivateNetworks, UseSpecifiedNetworks.
      # - DNS_SERVER_RECURSION_DENIED_NETWORKS=1.1.1.0/24 #Comma separated list of IP addresses or network addresses to deny recursion. Valid only for `UseSpecifiedNetworks` recursion option.
      # - DNS_SERVER_RECURSION_ALLOWED_NETWORKS=127.0.0.1, 192.168.1.0/24 #Comma separated list of IP addresses or network addresses to allow recursion. Valid only for `UseSpecifiedNetworks` recursion option.
      - DNS_SERVER_ENABLE_BLOCKING=true #Sets the DNS server to block domain names using Blocked Zone and Block List Zone.
      # - DNS_SERVER_ALLOW_TXT_BLOCKING_REPORT=false #Specifies if the DNS Server should respond with TXT records containing a blocked domain report for TXT type requests.
      - DNS_SERVER_BLOCK_LIST_URLS=https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts,https://raw.githubusercontent.com/RPiList/specials/master/Blocklisten/Win10Telemetry,https://raw.githubusercontent.com/RPiList/specials/master/Blocklisten/MS-Office-Telemetry,https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/SmartTV.txt,https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/android-tracking.txt,https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/AmazonFireTV.txt,https://raw.githubusercontent.com/RPiList/specials/master/Blocklisten/easylist,https://raw.githubusercontent.com/RPiList/specials/master/Blocklisten/spam.mails,https://raw.githubusercontent.com/anudeepND/blacklist/master/adservers.txt,https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/spy.txt,https://raw.githubusercontent.com/autinerd/anti-axelspringer-hosts/master/axelspringer-hosts,https://v.firebog.net/hosts/Easyprivacy.txt,https://big.oisd.nl/
      - DNS_SERVER_FORWARDERS=anycast.uncensoreddns.org ([2001:67c:28a4::]:853),anycast.uncensoreddns.org (91.239.100.100:853),unicast.uncensoreddns.org ([2a01:3a0:53:53::]:853),unicast.uncensoreddns.org (89.233.43.71:853),dns7.dns-ga.com (159.69.46.85:853),dns.njal.la (95.215.19.53:853),dns.njal.la ([2001:67c:2354:2::53]:853),dot.ffmuc.net (5.1.66.255:853),dot.ffmuc.net ([2001:678:e68:f000::]:853),dot.ffmuc.net (185.150.99.255:853),dot.ffmuc.net ([2001:678:ed0:f000::]:853),dns.mullvad.net (194.242.2.2:853),dns.mullvad.net ([2a07:e340::2]:853)
      - DNS_SERVER_FORWARDER_PROTOCOL=Tls #Forwarder protocol options: Udp, Tcp, Tls, Https, HttpsJson.
      # - DNS_SERVER_LOG_USING_LOCAL_TIME=true #Enable this option to use local time instead of UTC for logging.
    volumes:
      - /mnt/nvme/dockerInDocker/dns-server-config:/etc/dns
    restart: unless-stopped

  monerod:
    image: simple-monerod:latest
    build: ./simple-monerod-docker
    restart: always
    container_name: monerod
    user: 1000:1000
    tty: true
    stdin_open: true
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 18G
    ports:
      - 18089:18089
      - 18081:18081
      - 18080:18080
      - 18083:18083
    volumes:
      - /mnt/nvme/dockerInDocker/bitmonero:/home/monero
    healthcheck:
      test: curl --fail http://localhost:18081/get_height || exit 1
      interval: 60s
      timeout: 5s
      retries: 10
      start_period: 40s
    command:
      - "--rpc-restricted-bind-ip=0.0.0.0"
      - "--rpc-restricted-bind-port=18089"
      - "--rpc-bind-ip=0.0.0.0"
      - "--public-node"
      - "--igd=enabled"
      - "--confirm-external-bind"
      - "--enable-dns-blocklist"
      - "--prune-blockchain"
      - "--sync-pruned-blocks"
      - "--limit-rate-down=1048576"
      - "--max-log-files=3"
      - "--max-log-file-size=1048576"
      - "--zmq-pub=tcp://0.0.0.0:18083"
      - "--out-peers=64"
      - "--ban-list=/home/monero/monero-ban-list/ban_list.txt"

  db:
    image: mysql:8.4
    container_name: db
    restart: unless-stopped
    env_file: /mnt/nvme/dockerInDocker/wordpress/.env
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
    environment:
      - MYSQL_DATABASE=wordpress
    volumes:
      - /mnt/nvme/dockerInDocker/dbdata:/var/lib/mysql
    command: '--mysql-native-password=ON'
    networks:
      - app-network

  wordpress:
    depends_on:
      - db
    build: 
          context: .
          dockerfile: wordpress.Dockerfile
    container_name: wordpress
    restart: unless-stopped
    env_file: /mnt/nvme/dockerInDocker/wordpress/.env
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_NAME=wordpress
    volumes:
      - /mnt/nvme/dockerInDocker/wp:/var/www/html
    networks:
      - app-network

  webserver:
    depends_on:
      - wordpress
    image: nginx:1.28-alpine
    container_name: webserver
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
    ports:
      - "10.0.0.7:8420:80"
    volumes:
      - /mnt/nvme/dockerInDocker/wp:/var/www/html
      - /mnt/nvme/dockerInDocker/nginx-conf:/etc/nginx/conf.d
      - /mnt/nvme/dockerInDocker/certbot-etc:/etc/letsencrypt
    networks:
      - app-network
      

  certbot:
    depends_on:
      - webserver
    image: certbot/certbot
    container_name: certbot
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500m
    volumes:
      - /mnt/nvme/dockerInDocker/certbot-etc:/etc/letsencrypt
      - /mnt/nvme/dockerInDocker/wp:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email yeet@bieringer.dev --agree-tos --no-eff-email --staging -d bieringer.dev -d www.bieringer.dev

  esphome:
    container_name: esphome
    image: ghcr.io/esphome/esphome
    env_file: /mnt/nvme/dockerInDocker/espHome/.env
    volumes:
      - /mnt/nvme/dockerInDocker/espHome/config:/config
    restart: always
    privileged: true
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500m
    
  archiveTeamWarrior:
    image: atdr.meo.ws/archiveteam/warrior-dockerfile
    container_name: archiveTeamWarrior
    hostname: archiveTeamWarrior
    volumes:
      - /mnt/nvme/dockerInDocker/archiveTeamWarriorConfigs/noNbr:/home/warrior/projects
    environment:
      - DOWNLOADER="bierboi"
      - CONCURRENT_ITEMS=6
      - SELECTED_PROJECT="pastebin"
    ports:
      - "8001:8001"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500m

  archiveTeamWarrior2:
    image: atdr.meo.ws/archiveteam/warrior-dockerfile
    container_name: archiveTeamWarrior2
    hostname: archiveTeamWarrior
    volumes:
      - /mnt/nvme/dockerInDocker/archiveTeamWarriorConfigs/2:/home/warrior/projects
    environment:
      - DOWNLOADER="bierboi"
      - CONCURRENT_ITEMS=6
      - SELECTED_PROJECT="mediafire"
    ports:
      - "8002:8001"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500m

  archiveTeamWarrior3:
    image: atdr.meo.ws/archiveteam/warrior-dockerfile
    container_name: archiveTeamWarrior3
    hostname: archiveTeamWarrior
    volumes:
      - /mnt/nvme/dockerInDocker/archiveTeamWarriorConfigs/3:/home/warrior/projects
    environment:
      - DOWNLOADER="bierboi"
      - CONCURRENT_ITEMS=6
      - SELECTED_PROJECT="imgur"
    ports:
      - "8003:8001"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500m

  archiveTeamWarrior4:
    image: atdr.meo.ws/archiveteam/warrior-dockerfile
    container_name: archiveTeamWarrior4
    hostname: archiveTeamWarrior
    volumes:
      - /mnt/nvme/dockerInDocker/archiveTeamWarriorConfigs/4:/home/warrior/projects
    environment:
      - DOWNLOADER="bierboi"
      - CONCURRENT_ITEMS=6
      - SELECTED_PROJECT="blogger"
    ports:
      - "8004:8001"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500m

  archiveTeamWarrior5:
    image: atdr.meo.ws/archiveteam/warrior-dockerfile
    container_name: archiveTeamWarrior5
    volumes:
      - /mnt/nvme/dockerInDocker/archiveTeamWarriorConfigs/5:/home/warrior/projects
    hostname: archiveTeamWarrior
    environment:
      - DOWNLOADER="bierboi"
      - CONCURRENT_ITEMS=6
      - SELECTED_PROJECT="urls"
    ports:
      - "8005:8001"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500m

  archiveTeamWarrior6:
    image: atdr.meo.ws/archiveteam/warrior-dockerfile
    container_name: archiveTeamWarrior6
    hostname: archiveTeamWarrior
    volumes:
      - /mnt/nvme/dockerInDocker/archiveTeamWarriorConfigs/6:/home/warrior/projects
    environment:
      - DOWNLOADER="bierboi"
      - CONCURRENT_ITEMS=6
      - SELECTED_PROJECT="terroroftinytown"
    ports:
      - "8006:8001"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500m

  archiveTeamWarrior01:
    image: atdr.meo.ws/archiveteam/warrior-dockerfile
    container_name: archiveTeamWarrior01
    hostname: archiveTeamWarrior
    volumes:
      - /mnt/nvme/dockerInDocker/archiveTeamWarriorConfigs/01:/home/warrior/projects
    environment:
      - DOWNLOADER="bierboi"
      - CONCURRENT_ITEMS=6
      - SELECTED_PROJECT="livestream"
    ports:
      - "8010:8001"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500m

  archiveTeamWarrior7:
    image: atdr.meo.ws/archiveteam/warrior-dockerfile
    container_name: archiveTeamWarrior7
    hostname: archiveTeamWarrior
    volumes:
      - /mnt/nvme/dockerInDocker/archiveTeamWarriorConfigs/7:/home/warrior/projects
    environment:
      - DOWNLOADER="bierboi"
      - CONCURRENT_ITEMS=6
      - SELECTED_PROJECT="telegram"
    ports:
      - "8007:8001"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    restart: always

  archiveTeamWarrior8:
    image: atdr.meo.ws/archiveteam/warrior-dockerfile
    container_name: archiveTeamWarrior8
    hostname: archiveTeamWarrior
    volumes:
      - /mnt/nvme/dockerInDocker/archiveTeamWarriorConfigs/8:/home/warrior/projects
    environment:
      - DOWNLOADER="bierboi"
      - CONCURRENT_ITEMS=6
      - SELECTED_PROJECT="usgovernment"
    ports:
      - "8008:8001"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500m

  archiveTeamWarrior9:
    image: atdr.meo.ws/archiveteam/warrior-dockerfile
    container_name: archiveTeamWarrior9
    hostname: archiveTeamWarrior
    volumes:
      - /mnt/nvme/dockerInDocker/archiveTeamWarriorConfigs/9:/home/warrior/projects
    environment:
      - DOWNLOADER="bierboi"
      - CONCURRENT_ITEMS=6
      - SELECTED_PROJECT="goo-gl"
    ports:
      - "8009:8001"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500m
  jellyfin-pass:
    image: jellyfin/jellyfin
    container_name: jellyfinP
    user: 568:568
    ports:
      - 8097:8096
    devices:
      - "/dev/dri:/dev/dri"
    volumes:
      - /mnt/nvme/dockerInDocker/jelly-p-Config:/config
      - /mnt/nvme/dockerInDocker/jelly-p-Cache:/cache
      - type: bind
        source: /mnt/hdds/storj/Hetzner/mediaBox/porn
        target: /mnt/hdds/storj/Hetzner/mediaBox/porn
    restart: 'unless-stopped'
    group_add:
      - 44
      - 107
      - 568
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: 568:568
    network_mode: 'host'
    devices:
      - "/dev/dri:/dev/dri"
    group_add:
      - 44
      - 107
      - 568
    volumes:
      - /mnt/nvme/dockerInDocker/jellyConfig:/config
      - /mnt/nvme/dockerInDocker/jellyCache:/cache
      - type: bind
        source: /mnt/hdds/media
        target: /mnt/hdds/media
    restart: 'unless-stopped'
    # Optional - alternative address used for autodiscovery
    environment:
      - JELLYFIN_PublishedServerUrl=http://10.0.0.7
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    deploy:
      resources:
        limits:
          cpus: '24'
          memory: 15G

  navidrome:
    image: deluan/navidrome:latest
    user: 568:568 # should be owner of volumes
    env_file: /mnt/nvme/dockerInDocker/navidrome/.env
    container_name: navidrome
    ports:
      - "4533:4533"
    restart: unless-stopped
    volumes:
      - "/mnt/nvme/dockerInDocker/navidrome:/data"
      - "/mnt/hdds/media/music:/music:ro"
    deploy:
      resources:
        limits:
          cpus: '3'
          memory: 2G

  lidify:
    image: thewicklowwolf/lidify:latest
    container_name: lidify
    env_file: /mnt/nvme/dockerInDocker/lidify/.env
    volumes:
      - /mnt/nvme/dockerInDocker/lidify:/lidify/config
      - "/mnt/hdds/media/music:/data/media/music:ro"
    ports:
      - 5000:5000
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 500m

 
  browserless-chrome:
    image: browserless/chrome:1.61.1-chrome-stable
    container_name: browserless-chrome
    user: 568:568
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 6144M
    ports:
      - 10194:3000
    environment:
      - TZ="Europe/Berlin"
      - UMASK="0022"
      - UMASK_SET="0022"
      - NVIDIA_VISIBLE_DEVICES="void"
      - S6_READ_ONLY_ROOT="1"
      - CHROME_REFRESH_TIME="3600000"
      - CONNECTION_TIMEOUT="30000"
      - DEFAULT_BLOCK_ADS="true"
      - DEFAULT_HEADLESS="true"
      - DEFAULT_IGNORE_HTTPS_ERRORS="false"
      - DISABLE_AUTO_SET_DOWNLOAD_BEHAVIOR="false"
      - ENABLE_API_GET="false"
      - ENABLE_CORS="false"
      - ENABLE_DEBUGGER="false"
      - ENABLE_XVBF="false"
      - EXIT_ON_HEALTH_FAILURE="false"
      - FUNCTION_ENABLE_INCOGNITO_MODE="false"
      - MAX_CONCURRENT_SESSIONS="10"
      - MAX_QUEUE_LENGTH="5"
      - METRICS_JSON_PATH="/metrics/metrics.json"
      - WORKSPACE_DELETE_EXPIRED="false"
      - WORKSPACE_DIR="/downloads"          
      - WORKSPACE_EXPIRE_DAYS="30"
      - DEFAULT_STEALTH="true"
      - PREBOOT_CHROME="true"
      - SCREEN_DEPTH="16"
      - SCREEN_WIDTH="1920"
      - SCREEN_HEIGHT="1024"
    volumes:
      - /mnt/nvme/tns-docker-apps/browserless-chrome/browserless-chrome-metrics:/metrics
      - /mnt/nvme/tns-docker-apps/browserless-chrome/browserless-chrome-downloads:/downloads

  gluetun-jackett:
    image: tccr.io/tccr/gluetun:v3.40.0
    container_name: gluetun
    # line above must be uncommented to allow external containers to connect.
    # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/connect-a-container-to-gluetun.mdexternal-container-to-gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 10095:10095
      - "9117:9117"
      - "35412:80"
    restart: always
    volumes:
      - /mnt/nvme/tns-docker-apps/gluetun-jackett:/gluetun
    env_file: /mnt/nvme/dockerInDocker/gluetun-jackett-wg.env
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 6G
  jackett:
    image: ghcr.io/linuxserver/jackett:0.22.2026
    container_name: jackett
    network_mode: "service:gluetun-jackett"
    healthcheck:
      test: "curl --fail http://localhost:9117/UI/Login?ReturnUrl=%2FUI%2FDashboard || exit 1"
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    restart: always
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Berlin
    labels:
      "autoheal": "true"
    volumes:
      - /mnt/nvme/tns-docker-apps/jackett/config:/config
      - /mnt/nvme/tns-docker-apps/jackett/downloads:/downloads
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 1G

  speedtest-tracker-gluetun:
    image: lscr.io/linuxserver/speedtest-tracker:latest
    container_name: speed-glue
    network_mode: "service:gluetun-jackett"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - APP_KEY="base64:2vOHpKcdZuRqHVt9hXXbX1Nqi53O18DZG5/OQEoeyvc="
      - APP_URL="http://10.0.0.7:35412"
      - DB_CONNECTION=sqlite
      - SPEEDTEST_SCHEDULE="6 */6 * * *"
      - SPEEDTEST_SERVERS=
      - DB_HOST= #optional
      - DB_PORT= #optional
      - DB_DATABASE= #optional
      - DB_USERNAME= #optional
      - DB_PASSWORD= #optional
      - DISPLAY_TIMEZONE=Europe/Berlin #optional
      - PRUNE_RESULTS_OLDER_THAN=90 #optional
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500m
    volumes:
      - /mnt/nvme/tns-docker-apps/speed-jackett/config:/config
    restart: unless-stopped
  speedtest-tracker:
    image: lscr.io/linuxserver/speedtest-tracker:latest
    container_name: speed
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - APP_KEY="base64:2vOHpKcdZuRqHVt9hXXbX1Nqi53O18DZG5/OQEoeyvc="
      - APP_URL="http://10.0.0.7:35411"
      - DB_CONNECTION=sqlite
      - SPEEDTEST_SCHEDULE="15 */6 * * *"
      - SPEEDTEST_SERVERS=
      - DB_HOST= #optional
      - DB_PORT= #optional
      - DB_DATABASE= #optional
      - DB_USERNAME= #optional
      - DB_PASSWORD= #optional
      - DISPLAY_TIMEZONE=Europe/Berlin #optional
      - PRUNE_RESULTS_OLDER_THAN=90 #optional
    volumes:
      - /mnt/nvme/tns-docker-apps/speed/config:/config
    ports:
      - 35411:80
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500m
    restart: unless-stopped
  qbt:
    image: ghcr.io/onedr0p/qbittorrent:5.0.4
    container_name: qbt
    network_mode: "service:gluetun-jackett"
    restart: always
    user: 568:568
    environment:
      - TZ="Europe/Berlin"
      - UMASK="0022"
      - UMASK_SET="0022"
      - NVIDIA_VISIBLE_DEVICES="void"
      - S6_READ_ONLY_ROOT="1"
      - QBITTORRENT__PORT="10095"
      - QBT_Preferences__WebUI__Address="*"
      - QBT_TORRENTING_PORT="21057"
    volumes:
      - /mnt/hdds/media:/jellyMedia
      - /mnt/nvme/qbtTmp:/qbtTmp
      - /mnt/nvme/tns-docker-apps/qbt/config:/config
    deploy:
      resources:
        limits:
          cpus: '10'
          memory: 20G
  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE #optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlinl
      - LOG_CONFS=true #optional
    volumes:
      - /mnt/nvme/tns-docker-apps/wireguard/config:/config
      - /lib/modules:/lib/modules #optional
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500m

  jfa-go:
    container_name: jfa
    ports:
        - 8056:8056
    volumes:
        - /mnt/nvme/tns-docker-apps/jfa-go:/data
        - /mnt/nvme/dockerInDocker/jellyConfig:/jf
        - /etc/localtime:/etc/localtime:ro
    image: hrfee/jfa-go
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 500m
  mongodb:
    container_name: mongo
    image: mongo:6.0.4
    volumes:
      - /mnt/nvme/tns-docker-apps/mongodb_data:/data/db
    restart: "unless-stopped"
    environment:
      # Change this to your time zone, valid time zones can be found here: https://www.joda.org/joda-time/timezones.html
      - TZ=Europe/Berlin
    deploy:
      resources:
        limits:
          cpus: '3'
          memory: 2048m
    networks:
      - graylog  
  elasticsearch:
    container_name: elasticsearch
    user: 1000:1000
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    volumes:
      - /mnt/nvme/tns-docker-apps/elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      # Change this to your time zone, valid time zones can be found here: https://www.joda.org/joda-time/timezones.html
      - TZ=Europe/Berlin
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms4096m -Xmx4096m"
    restart: "unless-stopped"
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 6G
    networks:
      - graylog
  graylog:
    container_name: graylog
    image: graylog/graylog:5.0.2
    volumes:
      - graylog_data:/usr/share/graylog/data
    env_file: /mnt/nvme/dockerInDocker/graylog.env
    deploy:
      resources:
        limits:
          cpus: '5'
          memory: 4G
    environment:
      # Change these to your time zone, valid time zones can be found here: https://www.joda.org/joda-time/timezones.html
      - TZ=Europe/Berlin
      - ROOT_TIMEZONE=Europe/Berlin
      - GRAYLOG_TIMEZONE=Europe/Berlin
      # CHANGE ME (must be at least 16 characters)! This is not your password, this is meant for salting the password below.
      #GRAYLOG_PASSWORD_SECRET set in env_file
      # Username is "admin"
      # Password is "admin", change this to your own hashed password. 'echo -n "password" | sha256sum' 
      #GRAYLOG_ROOT_PASSWORD_SHA2 set in env_file
      - GRAYLOG_HTTP_EXTERNAL_URI=http://10.0.0.7:9000/
    networks:
      - graylog
    depends_on:
      - mongodb
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - 9000:9000
      # Syslog UDP
      - 1514:1514/udp
      # Syslog TCP Optional
      #- 1514:1514
    restart: "unless-stopped"
  influxdb:
    container_name: influxdb
    image: influxdb:2.6.1
    deploy:
      resources:
        limits:
          cpus: '3'
          memory: 2048m
    ports:
      - '8086:8086'
    volumes:
      - /mnt/nvme/tns-docker-apps/influxdb2_data:/var/lib/influxdb2
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      # Change this to your time zone, valid time zones can be found here: https://www.joda.org/joda-time/timezones.html
      - TZ=Europe/Berlin
    restart: "unless-stopped"
    networks:
      - graylog
  grafana:
    container_name: grafana
    image: grafana/grafana:9.2.10
    user: 1000:1000
    ports:
      - '3005:3000'
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 4G
    volumes:
      - /mnt/nvme/tns-docker-apps/grafana_data:/var/lib/grafana
    depends_on:
      - influxdb
    env_file: /mnt/nvme/dockerInDocker/grafana.env
    environment:
      # Change this to your time zone, valid time zones can be found here: https://www.joda.org/joda-time/timezones.html
      - TZ=Europe/Berlin
      # Change these
      #GF_SECURITY_ADMIN_USER set in grafana.env
      #GF_SECURITY_ADMIN_PASSWORD set in grafana.env
      - GF_INSTALL_PLUGINS=grafana-worldmap-panel
    restart: "unless-stopped"
    networks:
      - graylog
  statsd:
    container_name: statsd
    image: graphiteapp/graphite-statsd:1.1.10-5
    ports:
      - "8124:80"
      - "2003-2004:2003-2004"
      - "2023-2024:2023-2024"
      - "8125:8125/udp"
      - "8126:8126"
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 4G
    volumes:
      - /mnt/nvme/tns-docker-apps/graphite_conf:/opt/graphite/conf
    depends_on:
      - influxdb
    restart: "unless-stopped"
    networks:
      - graylog
  wg-easy:
    environment:
      - HOST=0.0.0.0
      - INSECURE=true
    image: ghcr.io/wg-easy/wg-easy:15
    container_name: wg-easy
    networks:
      wg:
        ipv4_address: 10.42.42.42
        ipv6_address: fdcc:ad94:bacf:61a3::2a
    volumes:
      - /mnt/nvme/tns-docker-apps/wireguard:/etc/wireguard
      - /lib/modules:/lib/modules:ro
    ports:
      - "1637:1637/udp"
      - "51821:51821/tcp"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
      # - NET_RAW # ⚠️ Uncomment if using Podman
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv6.conf.all.forwarding=1
      - net.ipv6.conf.default.forwarding=1

networks:
  wg:
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 10.42.42.0/24
        - subnet: fdcc:ad94:bacf:61a3::/64
  app-network:
    driver: bridge
  graylog:
    driver: bridge
volumes:
  graylog_data: